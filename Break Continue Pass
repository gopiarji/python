In Python, `break`, `continue`, and `pass` are control flow statements used within loops and conditional blocks. Here's a breakdown of each:

---

### **1. `break`**
- **Purpose**: Exits the nearest enclosing loop prematurely.
- **Use case**: When you want to stop the loop based on a condition.

**Example**:
```python
for i in range(10):
    if i == 5:
        break
    print(i)
```
**Output**:
```
0
1
2
3
4
```
> The loop stops when `i` is 5.

---

### **2. `continue`**
- **Purpose**: Skips the rest of the code inside the loop for the current iteration and moves to the next iteration.
- **Use case**: When you want to skip certain iterations based on a condition.

**Example**:
```python
for i in range(5):
    if i == 2:
        continue
    print(i)
```
**Output**:
```
0
1
3
4
```
> The number `2` is skipped.

---

### **3. `pass`**
- **Purpose**: A placeholder that does nothing. It’s used when a statement is syntactically required but you don’t want any code to run.
- **Use case**: Useful in defining empty functions, classes, or conditionals.

**Example**:
```python
for i in range(3):
    if i == 1:
        pass  # Placeholder for future code
    print(i)
```
**Output**:
```
0
1
2
```
> The `pass` does nothing; the loop continues as usual.

---

Would you like to see a combined example using all three in one program?
